//-----------------------------------------------------------------------------
// MiscTableScroll OPENSTEP HISTORY
// $Id: OPENSTEP-HISTORY.txt,v 1.66 99/08/20 06:11:02 sunshine Exp $
//-----------------------------------------------------------------------------

v0.140.1 1999/08/20 04:35 EDT sunshine@sunshineco.com
    Ported to MacOS/X Server for Mach and Windows.
    Updated all nibs to latest UI layout guidelines and adjusted all fonts.
    Updated copyright and contact information in README.
    Now uses NSStringFromClass() in place of +[NSObject description].
    On MacOS/X Server, exposed MiscTableScroll, MiscTableCell, and
	MiscExporter to Java.  Added a Java subproject.
    Renamed abbreviated titles on MiscExporterAccessoryView from "Col Titles"
	and "Col Grid" to "Column Title" and "Column Grid", respectively.
    Cell type popup on TableScroll inspector window now says "Image" rather
	than "Icon" for better OpenStep conformance.
    Added make.sh and platform.make to work around differences in the
	directory structure between MacOS/X Server DR2 and earlier versions of
	OpenStep.  In particular, the location of the system makefiles changed
	along with the location of the make utility on Windows.
    As of MacOS/X Server DR2, names of Interface Builder's connector classes
	changed.  Additionally, these classes are now published in the
	Interface Builder framework, so we no longer need to provide
	definitions for them ourselves.  Consequently NSIBConnector.h and
	other related files have been conditionalized as appropriate.  The
	classes which were renamed are:
	    NSIBConnector        --> NSNibConnector
	    NSIBOutletConnector  --> NSNibOutletConnector
	    NSIBControlConnector --> NSNibControlConnector
    Renamed NSIBConnector.h to NSNibConnector.h.
    Removed -getWidth: from MiscTableViewPrint.M.  It was unused and also
	buggy.  In particular, it was testing the incoming object to see if it
	responded to -size: when it should have been testing for -size.
    MiscTableScroll.h declared -moveColumnFrom:(int)pos to:(int)pos.  The Java
	bridging tool generated Java code moveColumnFrom(int pos, int pos).
	The Java compiler complained heatedly about using 'pos' twice.
	Therefore renamed the arguments.
    For better OpenStep conformance, renamed methods which move slots.  This
	was also necessary to support Java since the Java bridge requires a
	one-to-one mapping of Objective-C selectors to Java method names.
	AppKit already had a mapping for moving columns, so we now match it.
	Updated the 'tops' script and documentation to reflect these changes.
	    border:moveSlotFrom:to: --> border:moveSlot:toSlot:
	    moveColumnFrom:to:      --> moveColumn:toColumn:
	    moveRowFrom:to:         --> moveRow:toRow:
	    slotDraggedFrom:to:     --> slotDragged:toSlot:
    Fixed bug: -[MiscTableScroll sizeToFit] was incorrectly checking cells to
	see if they respond to -cellSize: rather than -cellSize.  Consequently
	the method completely failed.
    Added a new DataSource category to MiscTableScroll.  This in an informal
	protocol which the delegate or dataDelegate may conform to.  All of
	the data-related methods which used to be in the Delegate categroy
	have been moved to the new category.  No new methods were added.  The
	DataSource category was defined in order to mimic AppKit categories
	and AppKit Java interfaces of similar ilk.  It is worth noting that
	the low-level Java bridge does not require that an Objective-C
	category exists with the same name as a Java interface (in this case
	DataSource), but the Java bridging tools do expect the corresponding
	Objective-C category to exist, and since we are using those tools, we
	need to conform to their requirements.
    Makefiles now use new $(LOCAL_LIBRARY_DIR) rather than hard-coding
	$(NEXT_ROOT)/LocalLibrary.  LOCAL_LIBRARY_DIR overcomes differences in
	directory structure between MacOS/X DR2 and earlier OpenStep versions.
    Added Makefile.postamble patch to eliminate NSFramework_forceLoad()
	compiler warning generated by makefiles on YellowBox DR2 for Windows.
    Converted the slot list on the inspector from a matrix of buttons to a
	TableScroll (via CustomView).
    Reworked the color setting controls on the TableScroll inspector nib.  Now
	provides user with ability to preview color selections by providing
	two text field which adopt the chosen colors for text and background.
	One text field previews selected cells, and the other unselected.
	This configuration also makes better use of window real-estate.
    TableScroll "Name" columns on connection inspector now autosize.
	Previously the widths were hard-coded and filled the scroll view
	exactly.  However as of MacOS/X Server, these sizes were incorrect.
	Autosizing allows it to look correct in all cases.
    Added extra comments to MiscTableConnInspector.M.
    Fixed bug: MiscTableBorder::clearCursor() was broken, making it a no-op.
    Fixed bug: 'tops' script mis-spelled -selectedTextColorChangedTo as
	-selectedTextColorChanagedTo.
    MiscBorderView now uses NSWindow's -cacheImageInRect:, restoreCachedImage,
	and -discardCachedImage rather than deprecated PSsetinstance() and
	PShideinstance().
    Changed return type of -numberOfSelectedSlots:, -numberOfSelectedRows, and
	-numberOfSelectedColumns from (unsigned int) to (int) to be consistent
	with similar methods such as -numberOfRows, -numberOfVisibleRows, etc.
	This also affects the Java exposure.  Since Java uses only signed
	numbers, (unsigned int) would have been promoted to an 8-byte value on
	the Java side which is typically inefficient.
    Framework/Makefile.postamble now ensures that the owner has "write"
	permission on the installed framework directories.  This is necessary
	since the Java subproject installs its dynamic library and Java .class
	files inside the framework's Resource directory.
    Cleaned up each of the Makefile.preamble and .postamble files.  Added
	copyright notices.
    Fixed bug: Incorrectly registered delegate to watch for standard NSControl
	text-editing notifications coming from TableView, even though the
	notifications are posted by the TableScroll; never by the TableView.
	Consequently, delegate was not receiving these notifications at all.
    Fixed bug: NSControlTextDidEndEditingNotification was only being sent
	if at least one of the delegates responded to the respective delegate
	message.  This was incorrect since it is possible that some other
	object might watch for this notification too.  The notification is now
	sent in all cases.
    Added MISC_TABLE_SCROLL_EXTERN & MISC_TABLE_SCROLL_PRIVATE_EXTERN to
	MiscTableTypes.h.  These are defined appropriately for all possible
	OpenStep platforms (Mach, Windows, Solaris, etc.) for exporting
	variables, such as notification strings, from the framework.
    For better OPENSTEP conformance, added new notifications.  They are
	published via the new MISC_TABLE_SCROLL_EXTERN macro.
	    MiscTableScrollSlotDraggedNotification
	    MiscTableScrollSlotSortReversedNotification
	    MiscTableScrollSlotResizedNotification
	    MiscTableScrollChangeFontNotification
	    MiscTableScrollFontChangedNotification
	    MiscTableScrollBackgroundColorChangedNotification
	    MiscTableScrollSelectedBackgroundColorChangedNotification
	    MiscTableScrollSelectedTextColorChangedNotification
	    MiscTableScrollTextColorChangedNotification
	    MiscTableScrollWillPrintNotification
	    MiscTableScrollDidPrintNotification
	    MiscTableScrollWillPrintPageHeaderNotification
	    MiscTableScrollWillPrintPageFooterNotification
	    MiscTableScrollWillEditNotification
	    MiscTableScrollDidEditNotification
    The delegates are automatically registered for the new notifications if
	appropriate.  All such delegate messages are now passed an
	NSNotification rather than MiscTableScroll.  Several messages were
	renamed in order to facilitate this change.  Additional arguments
	which used to be sent directly with the delegate message are now
	available within the notification's userInfo dictionary.  The 'tops'
	script and documentation have been altered to reflect these changes.
	An important benefit of this change is that the delegate messages
	-tableScroll:willPrintPageHeader:info: &
	-tableScroll:willPrintPageFooter:info: can now be cleanly exposed to
	Java.  Previously this was not possible since the "info" argument was
	a raw C-structure which could not be easily exposed over the Java
	bridge.  The affected methods are:
	    tableScroll:backgroundColorChangedTo:
				--> tableScrollBackgroundColorChanged:
	    tableScroll:border:slotDraggedFrom:to:
	    			--> tableScrollSlotDragged:
	    tableScroll:border:slotResized:
	    			--> tableScrollSlotResized:
	    tableScroll:border:slotSortReversed:
	    			--> tableScrollSlotSortReversed:
	    tableScroll:changeFont:to:
	    			--> tableScrollChangeFont:
	    tableScroll:didEdit:atRow:column:
	    			--> tableScrollDidEdit:
	    tableScroll:fontChangedFrom:to:
	    			--> tableScrollFontChanged:
	    tableScroll:selectedBackgroundColorChangedTo:
	    			--> tableScrollSelectedBackgroundColorChanged:
	    tableScroll:selectedTextColorChangedTo:
	    			--> tableScrollSelectedTextColorChanged:
	    tableScroll:textColorChangedTo:
	    			--> tableScrollTextColorChanged:
	    tableScroll:willEditAtRow:column:
	    			--> tableScrollWillEdit:
	    tableScroll:willPrintPageFooter:info:
	    			--> tableScrollWillPrintPageFooter:
	    tableScroll:willPrintPageHeader:info:
	    			--> tableScrollWillPrintPageHeader:
	    tableScrollDidPrint:
	    			--> tableScrollDidPrint:
	    tableScrollWillPrint:
	    			--> tableScrollWillPrint:
    Added a new Notifications category to MiscTableScroll.  As with the new
	DataSource category, this allows for a Notifications interface on the
	Java side.  No new methods were added.  Rather existing methods from
	the Delegate category were moved into this one.
    Fixed MiscTableCell to use NSColor's "system" colors for its default
	color scheme instead of hard-coded light-gray, black, and white.
    Updated all documentation to reflect Java exposure.
    Method prototype was documented incorrectly for these messages:
	-border:setSlot:tag:
	-cellFrameAtRow:column:
	-reviveCell:atRow:column:
	-sendDoubleActionIfEnabled
	-setRowSortVector:
	-writeSelectionToPasteboard:types:
    Documentation for these methods was botched:
	-changeFont:
	-setColumnTitleMode:
	-setColumnTitlesHeight:
	-setRowTitleMode:
	-slotTitleMode:
	-tableScrollSelectedBackgroundColorChanged:
	-tableScrollSelectedTextColorChanged:
	-tableScrollTextColorChanged:
    Though documented, method summaries were missing for these methods:
	-border:slotDragged:
	-border:slotResized:
	-border:slotSortReversed:
    Documentation for -border:setUniformSizeSlots: made invalid claim about
	not being able to resize uniform size slots.  This restriction was
	lifted in v133.1.
    Explained the for-all-cells portion of -sendAction:to:forAllCells: in
	documentation.  The meaning of "forAllCells" is not clear by itself.
    Added new "Delegates and Notifications" section to documentation.
    Fixed bug: -[MiscTableScroll changeFont:] was sending -convertFont:
	directly to the shared NSFontManager rather than "sender" as
	documented.  Now sends the message to "sender", which is assumed to
	be an NSFontManager or similarly capable object.
    For general clarity and better OpenStep conformance, renamed more methods.
	Updated documentation, 'tops' script, and 'jobs' script to reflect
	these changes.  Most name changes occurred in batches:
	    ...:byExtension:	--> ...:byExtendingSelection:
	    select...Tags:	--> select{Slots|Rows|Columns}WithTags:
	    deselect...Tags:	--> deselect{Slots|Rows|Columns}WithTags:
	    ...ISearchColumn:	--> ...IncrementalSearchColumn:
	Also renamed these specific methods:
	    drawClippedText	--> drawsClippedText
	    setDrawClippedText:	--> setDrawsClippedText:
	    trackingBy		--> selectsByRows
	    trackBy:		--> setSelectsByRows:
	    tracking		--> isTrackingMouse
	    stringForNSTabularTextPBoardType
				--> stringForNSTabularTextPboardType
    Fixed problem with cursor rectangles introduced by MacOS/X Server DR2.
	Prior to DR2, the AppKit did not handle small, adjacent cursor
	rectangles properly.  In particular they were often ignored depending
	upon the direction of movement of the mouse pointer.  To work around
	the problem TableScroll used overlapping rectangles (which appeased
	the AppKit).  However, as of DR2, the AppKit no longer deals well with
	overlapping rectangles.  In particular it often ignores them depending
	upon the direction of movement of the mouse pointer.  The code now
	conditionally uses overlapped or non-overlapped rectangles based upon
	the current platform.
    Added a new "Java" section to MiscTableScroll.rtf which documents use of
	TableScroll from within a Java project.  Discusses the necessary
	modifications to Makefile.preamble and CustomInfo.plist.  Documents
	new options MiscTableScrollAddLibrarySearchPaths and
	MiscTableScrollUseNullSecurityManager.  Discusses exported classes,
	interfaces, and naming conventions.
    Added support for "represented-object".  Maintains represented-objects for
	each slot on each border as well as a single represented-object for
	the table itself.  A represented-object can also be associated with
	each cell via -[NSCell setRepresentedObject:].  To be consistent with
	AppKit, represented-objects are archived along with the table,
	therefore incremented class version number.  Updated documentation to
	reflect new methods.  Added "Represented Objects" section to
	introduction.  Updated Java 'jobs' file to expose new methods.  The
	new methods are:
	    -representedObject
	    -setRepresentedObject:
	    -border:slotRepresentedObject:
	    -border:setSlot:representedObject:
	    -columnRepresentedObject:
	    -setColumn:representedObject:
	    -rowRepresentedObject:
	    -setRow:representedObject:
	    -border:slotWithRepresentedObject:
	    -columnWithRepresentedObject:
	    -rowWithRepresentedObject:
	    -cellWithRepresentedObject:
	    -getRow:column:ofCellWithRepresentedObject:
    Fixed bug: MiscTableBorder::setPrototype_P() failed to retain the new
	prototype.
    MiscTableTypes.h no longer imports old-style <objc/zone.h>.  Also now
	imports <Foundation/NSGeometry.h> rather than <AppKit/NSGraphics.h>.
    Patched makefiles to delete invalid & unnecessary PrivateHeaders symbolic
	link which system makefiles create within installed framework.
    Updated README to reflect new MacOS/X Server directory organization and
	documented Java exposure.
    Worked around problem with connection inspector in MacOS/X Server and
	YellowBox DR2 where it was not selecting the method in the action list
	for action or doubleAction in nibs which were loaded from a file.  New
	connections made in the current edit session displayed properly,
	though.  Problem was that -[IBClassData actionsOfClass:] no longer
	appends colon ":" to the returned action names, as it did prior to
	DR2, yet the action name stored in the NSNibControlConnector (after
	unarchiving) includes the colon.  The inspector was performing a
	simple string comparison to locate the method name in the action list.
	Fixed by canonicalizing the names before comparison.
    Fixed bug: -[MiscTableScroll sizeToFit] wasn't taking intercell grid into
	account when computing slot sizes.
    Added facility which informs TableScroll when the TableView changes
	first responder status.  Added methods -didBecomeFirstResponder and
	-didResignFirstResponder which subclasses may override as needed.
	TableView sends these messages to TableScroll at the appropriate times.
	Added delegate methods -tableScrollDidBecomeFirstResponder: and
	-tableScrollDidResignFirstResponder:, and notifications
	MiscTableScrollDidBecomeFirstResponderNotification and
	MiscTableScrollDidResignFirstResponderNotification.  Documented new
	methods and notifications and exposed them to Java.
    Worked around compiler/assembler bug on Windows.  The stub file generated
	by "bridget" for MiscTableScroll exports so many symbols that the
	compiler generates a single line of assembly which is so long that it
	overflows the assembler's input buffer, resulting in a crash.  The
	offending assembler directive looks like this:
	    .ascii " -export:symbol1 -export:symbol2 ... -export:symbolN\0"
	To work around this problem, I devised a "sed" script which breaks
	the line apart in this fashion:
	    .ascii " -export:symbol1"
	    .ascii " -export:symbol2"
	    ...
	    .ascii " -export:symbolN\0"
	I then patched the makefile so that it generates assembly files from
	the .m files instead of directly generating .o files.  The assembly
	file is run through the "sed" script and then passed to the assembler
	for generation of the final .o file.
    Fixed bug: MiscTableTypes.h was incorrectly exporting
	MiscDefaultCompareSlotFunc().  It failed to use extern "C" which meant
	that the name was mangled and inaccessible to Objective-C clients.
    Worked around nasty Objective-C++ compiler bug on YellowBox and OpenStep
	4.2 which resulted in some static, constant, file-global variables not
	being initialized.  The problem was that the compiler incorrectly
	placed certain variables (such as COMPARE_FUNC[] from
	MiscTableScrollSort.M) into the ".drectve" section of the COFF object
	file instead of the ".rdata" section where they should have been.
	Since the linker discards the .drectve section before creating the
	final output file, these variables were never being initialized.
	Added MiscTableScrollSymbols.M and modified the macros for exporting
	variables in order to work around the problem.  See MiscTableTypes.h
	and Notes/DLL-EXPORT.txt for a full discussion of the problem.
    Worked around bug in Apple's /System/Developer/Java/Headers/java-vm.h.  It
	fails to define prototypes for objc_msgSendSuper_stret() and
	objc_msgSend_stret() on ppc for Mach even though bridget generated
	code relies on these functions.  Note that prototypes for these
	functions are correctly defined for Windows.  To work around the
	problem I patched MiscTableScrollJava.h to manually define them on
	ppc for Mach.
    Significant updates to mcgh2misc scripts.  Updated to deal with new Java
	support.  Now handles java, pjava, jobs, and sed files.  Converts Java
	class names from org.misckit to org.misckit.  Updated to deal with
	new platform.make and make.sh.  Now filters output of Emacs batch
	processing so that only important messages are displayed instead of
	spewing an enormous amount of output.  Source and target directories
	can now be specified on the command line and default to sane values if
	omitted.  Removed requirement that script be run from within
	MiscTableScroll source directory.  No longer copies RCS directories to
	target.  Now files are checked out from source RCS directories
	directly into target locations.  Added usage statement and -help
	option.  Now optionally copies MiscKit license files, if present, into
	target.  Simplified EXPAND() which was doing unnecessary work.
	WHATS_LOCKED() now takes the directory as an argument instead of
	assuming the current working directory.  Removed unused SETUP_DOCS()
	and SETUP_HEADERS() functions.  Simplified save and rename logic in
	lisp code.  Now disables Emacs auto-save and backup-file creation.
	Renamed lisp functions and variables to better reflect their actual
	meaning.  Added copyright notice.
    Worked around method-name change in Interface Builder which occured
	between DR2 and MacOS/X Server.  The methods -actionsOfClass: and
	-outletsOfClass: were renamed to -actionNamesOfClass: and
	-outletNamesOfClass:, respectively.
    Worked around change in Java headers between DR2 and MacOS/X Server.  In
	DR2 there was a bug in java-vm.h in which it neglected to declare
	objc_msgSendSuper_stret() & objc_msgSend_stret() for PPC hardware even
	though bridget generates code which calls those functions.  To work
	around this problem, MiscTableScrollJava.h manually declares them for
	PPC.  However, as of MacOS/X Server, these functions have a different
	prototype (the argument list differs), have moved to objc-runtime.h,
	and are correctly declared for PPC targets.  To avoid a complaints
	from the compiler about conflicting prototypes, declaration of these
	functions in MiscTableScrollJava.h had to be protected with an #if
	directive which only declares them for DR2.
    Fixed bug: Was ignoring the user-specified scaling factor during printing.
	Problem was that between NextStep and OpenStep, the AppKit engineers
	moved the scaling factor input field from the page layout panel to the
	print panel.  Under NextStep, it was possible to grab the scaling
	factor from the global PrintInfo object even before the print panel
	was launched, and this is exactly what MiscTableView did.  However, as
	of OpenStep, the scaling factor is not available until the print panel
	has been dismissed by the user.  MiscTableViewPrint.M had not been
	updated to account for this difference.  It was still assuming that
	the scaling factor was available prior to initiation of the print
	operation.  Thanks go to Juergen Moellenhoff <jurgen@oic.de> for
	bringing this bug to my attention.
    Worked around problem with MiscExporterAccessoryView.nib under Java on
	MacOS/X Server.  Since we still support OpenStep, this nib was created
	with the OpenStep Interface Builder and contains NSPopUpButtons which
	archive instances of NSPopUpList.  However, as of MacOS/X Server DR2,
	NSPopUpList is deprecated.  The Objective-C AppKit on MacOS/X Server
	still understands the old NSPopUpList class for compatibility's sake,
	but it has not been exposed to the Java side.  Consequently, when
	MiscExporterAccessoryView is accessed from a Java application, an
	exception is thrown (and ignored by the Java bridge) since it does not
	recognize the NSPopUpList class.  To work around this problem, I added
	a copy of this nib, named MiscExporterAccessoryView-macintosh.nib,
	which was generated by the MacOS/X Server Interface Builder and is
	specific to that platform.
    Patched Makefile.preambles to account for missing .SUFFIX:.cpp directive
	in system makefiles on OpenStep 4.1 & 4.2.
    Incremented the project version from "A" to "B" since changes were made
	which are incompatible with previous versions.
    Added a warning message to the README telling developers to be aware of
	renamed delegate messages and their related dangers.

    Changed Files:
    + make.sh
    * Makefile
    * MiscBorderView.M
    * MiscDelegateFlags.{h|cc}
    * MiscExporterAccessoryView.nib
    + MiscExporterAccessoryView-macintosh.nib
    * MiscTableBorder.{h|cc}
    * MiscTableBorderIO.cc
    * MiscTableCell.M
    * MiscTableConnector.{h|M}
    * MiscTableConnInspector.{h|M}
    * MiscTableScroll-3.3-4.x.tops
    * MiscTableScroll.{h|M|rtf}
    * MiscTableScrollCursor.M
    * MiscTableScrollData.M
    * MiscTableScrollEdit.M
    * MiscTableScrollInspector.{h|M|nib}
    * MiscTableScrollIO.M
    * MiscTableScrollISearch.M
    * MiscTableScrollKB.M
    * MiscTableScrollPB.M
    * MiscTableScrollPrint.M
    * MiscTableScrollPrivate.h
    * MiscTableScrollSel.M
    * MiscTableScrollSort.M
    + MiscTableScrollSymbols.M
    * MiscTableTypes.h
    * MiscTableView.M
    * MiscTableViewPrint.M
    * mcgh2misc.{el|sh}
    > NSIBConnector.h --> NSNibConnector.h
    * NSNibConnector.h
    * PB.project
    + platform.make
    * README.rtf
    + Java/Makefile
    + Java/Makefile.{preamble|postamble}
    + Java/MiscTableScrollJava.{h|m|jobs|sed}
    + Java/PB.project
    + Notes/DLL-EXPORT.txt
    + Notes/DR2-MOSXS.txt
    + Notes/JAVA-BUGS.txt
    + Notes/JAVA-TODO.txt
    * {Framework|Palette}/Makefile
    * {Framework|Palette}/Makefile.{preamble|postamble}
    * {Framework|Palette}/PB.project

v0.139.1 1998/06/13 09:30 EDT sunshine@sunshineco.com
    Applied v0.139 NEXTSTEP 3.3 diffs.

    Changed Files:
    * MiscBorderView.M
    * MiscTableView.M

v0.138.1 1998/03/31 04:19 EST sunshine@sunshineco.com
    Applied v0.138 NEXTSTEP 3.3 diffs.
    Fixed up #import of public MiscTableScroll headers.  Some imports still
	used "..." rather than <MiscTableScroll/...>.  Others neglected the
	MiscTableScroll/ prefix.  The affected files:
	- MiscDrawList.cc
	- MiscExporter.M
	- MiscExporterASCII.M
	- MiscGeometry.h
	- MiscTableBorder.{h|cc}
	- MiscTableConnInspector.M
	- MiscTableScrollIO.M
	- MiscTableScrollPalette.M
	- MiscTableScrollSel.M
	- MiscTableUtil.h
	- MiscTableViewCursor.M
	- MiscTableViewDrag.M
    Fixed bug: -[MiscTableScroll textDidBeginEditing:] was mistakingly sending
	the notification NSControlTextDidChangeNotification instead of
	NSControlTextDidBeginEditingNotification.
    Fixed bug: Pressing the "new slot" button on the IB inspector would
	select & draw the new slot, but fail to redraw the slot which lost
	selection.
    Ditched the "alignTitle" field from the IB inspector altogether.  The
	alignment buttons correctly dim when disabled under OPENSTEP/Rhapsody,
	so this text field was extraneous.  This also freed me from having
	to hard-wire color values for the text's enabled/disabled states.
    The background of the IB inspector's slot scroll now uses NSColor's
	"system" color rather than being hard-wired as dark-gray.
    Construction of the exporter accessory-view is no longer performed
	programatically by MiscExporterAccessoryView.M.  Since MiscTableScroll
	is now a framework, it is possible to lay out the export controls in a
	nib, rather than doing so programatically.  Consequently, added
	MiscExporterAccessoryView.nib.  This also simplifies localization since
	control titles are no longer compiled in.
    Fixed problem: Under Rhapsody, exporter pop-up controls got squashed
	together since they were smaller than the minimum size enforced by
	Rhapsody.
    Fixed colors: Colors are no longer hard-wired into the source code or
	nibs.  NSColor's "system" colors are now used by default in order to
	conform to color-scheme as defined by each platform (NT, Rhapsody,
	etc.).  This affects the following colors:
	- text
	- background
	- selected text
	- selected background
	- edited text
	- edited background
	- drag well
	- grid
    MiscBorderCell is now derived from NSTableHeaderCell rather than
	NSTextFieldCell.  Consequently it now knows how to correctly draw
	and color itself on all platforms, whereas the old implementation
	only knew how to draw itself in a NextStep-like fashion.
    Moved constants MISC_FRAME_HEIGHT & MISC_FRAME_WIDTH from MiscBorderView.M
	into MiscTableScrollPrivate.h since the values need to be known by
	both MiscBorderView.M and MiscTableBorder.cc.  Also adjusted the
	default values to agree with the new MiscBorderCell implementation.
    Fixed MiscBorderView.M to account for new MiscBorderCell implementation
	which requires changes to its "highlight" flag rather than "state" in
	order to reflect "selection".
    Worked around OPENSTEP 4.2 for Windows bug where compiler crashes when
	sending a message to 'super' from within a category.  This showed up
	again when MiscTableScrollIO.M was broken out of MiscTableScroll.M in
	v133.1.
    Fixed problem where text selection was not visible during editing now that
	NSColor's "system" colors are used.  Problem was that the cell was
	installing its own colors in the NSTextView.  Fixed by setting up
	the correct colors in the NSTextView after asking the cell to commence
	editing.
    Ported MiscTableScrollISearch.M back to OPENSTEP 4.1.  Compiler was
	complaining about "enumeral and non-emumeral type in conditional
	expression" for 'mask = flag ? NSCaseInsensitiveSearch : 0'.
    Ported MiscGeometry to the PPC compiler for Rhapsody DR1.  The compiler
	would crash with an "internal compiler error" each time one of the
	inline methods had to convert a float to an int.
    Ported mcgh2misc.sh to handle Rhapsody DR1 nib format where data.classes
	gave way to classes.nib inside nib wrapper.
    Fixed mcgh2misc.sh to deal correctly with new MiscAlign{Left|Center|Right}
	images in MiscTableScrollInspector.nib.

    Changed Files:
    * MiscBorderCell.{h|M}
    * MiscBorderView.M
    * MiscDelegateFlags.{h|cc}
    * MiscDrawList.cc
    * MiscExporter.M
    + MiscExporterAccessoryView.{h|M|nib}
    * MiscExporterASCII.M
    * MiscGeometry.{h|cc}
    * MiscTableBorder.{h|cc}
    * MiscTableConnInspector.M
    * MiscTableScroll.{h|M|rtf}
    * MiscTableScrollEdit.M
    * MiscTableScrollInspector.{h|M|nib}
    * MiscTableScrollIO.M
    * MiscTableScrollISearch.M
    * MiscTableScrollPalette.M
    * MiscTableScrollPrivate.h
    * MiscTableScrolSel.M
    * MiscTableUtil.h
    * MiscTableView.M
    * MiscTableViewCursor.M
    * MiscTableViewDrag.M
    * MiscTableWell.M
    * mcgh2misc.sh

v0.137.1 1998/03/23 20:45 EST sunshine@sunshineco.com
    Applied v0.137 NEXTSTEP 3.3 diffs.
    Fixed documentation bugs.  The set slot order/sizes methods and cousins
	were listed as returning (void) rather than (BOOL).

    Changed Files:
    * MiscTableBorder.{h|cc}
    * MiscTableScroll.{M|rtf}

v0.136.1 1998/03/23 10:00 EST sunshine@sunshineco.com
    Applied v0.136 NEXTSTEP 3.3 diffs.

    Changed Files:
    * MiscTableScrollISearch.M
    * MiscTableScrollSort.M

v0.135.1 1998/03/23 08:30 EST sunshine@sunshineco.com
    Applied v0.135 NEXTSTEP 3.3 diffs.
    Fixed alignment buttons on IB Inspector.  They weren't lighting correctly.
	The fix invovled removing the old button matrix from the window and
	dropping in a new one in Interface Builder.

    Changed Files:
    * MiscTableBorder.{h|cc}
    * MiscTableScrollInspector.{M|nib}

v0.134.1 1998/03/23 07:30 EST sunshine@sunshineco.com
    Applied v0.134 NEXTSTEP 3.3 diffs.
    Worked around cell editing problems in new -suspendEditing/-resumeEditing
	resulting from differences between NEXTSTEP and OPENSTEP text systems:
	1) textDidEndEditing: was getting called as a side-effect of suspend.
	    This caused many problems since it was a premature invocation.
	2) textShouldEndEditing: was *not* getting called if the user a)
	    edited, b) dragged slot, c) ended editing.  The problem was that
	    the suspend/resume caused the text system to forget that the user
	    had edited the text in step (a), and consequently
	    -textShouldEndEditing: was not getting called.  (Some programs,
	    such as ScrollDir rely heavily upon the invocation of this method,
	    so it was a serious bug.)

    Changed Files:
    * MiscBorderView.M
    * MiscDelegateFlags.{h|cc}
    * MiscTableScroll.{h|M|rtf}
    * MiscTableScrollEdit.M
    + MiscTracer.{h|cc}

v0.133.1 1998/03/22 12:00 EST sunshine@sunshineco.com
    Applied v0.133 NEXTSTEP 3.3 diffs.
    Added 'tops' conversions for new methods:
	cornerTitle	(char*	--> NSString)
	setCornerTitle:	(char*	--> NSString)
	minUniformSizeCols	--> minUniformSizeColumns
	maxUniformSizeCols	--> maxUniformSizeColumns
	setMinUniformSizeCols:	--> setMinUniformSizeColumns:
	setMaxUniformSizeCols:	--> setMaxUniformSizeColumns:
    Added 'tops' conversions for better OPENSTEP conformance:
	makeCellsPerform:...	--> makeCellsPerformSelector:...
    Removed 'tops' conversions for obsolete methods:
	colDataSize:
	colExpandsToData:
	setCol:dataSize:
	setCol:expandsToData:
    Updated README to reflect Rhapsody DR1 support, new email address, etc.

    Changed Files:
    * MiscBorderView.M
    * MiscCornerView.{h|M}
    * MiscDrawList.{h|cc}
    > MiscNullView.{h|M} --> MiscCornerView.{h|M}
    * MiscTableBorder.{h|cc}
    * MiscTableBorderIO.cc
    * MiscTableScroll.{h|M|rtf}
    * MiscTableScrollInspector.{h|M|nib}
    + MiscTableScrollIO.M
    * MiscTableScrollPalette.M
    * MiscTableScrollPrivate.h
    * MiscTableScroll-3.3-4.x.tops
    * MiscTableTypes.h
    * MiscTableUtil.h
    * MiscTableView.{h|M}
    * MiscTableViewPrint.M
    * pack.sh
    * README.rtf

v0.132.1 1997/11/24 04:35 EST sunshine@sunshineco.com
    Applied v0.132 NEXTSTEP 3.3 diffs.
    Ported back to OPENSTEP 4.1 by including MiscTableScrollPrivate.h in
	MiscTableBorderIO.cc in order to define __PRETTY_FUNCTION__.

    Changed Files:
    > MiscTableBorder_io.cc --> MiscTableBorderIO.cc
    > MiscTableBorder_sel.cc --> MiscTableBorderSel.cc
    * MiscTableBorderIO.cc
    * MiscTableScroll.M

v0.131.1 1997/11/24 02:00 EST sunshine@sunshineco.com
    Applied v0.131 NEXTSTEP 3.3 diffs.
    Fixed v1 bug: -[MiscBorderView range:fromRect:] was miscomputing max slot.

    Changed Files:
    * MiscBorderView.M
    * MiscTableViewPrint.M

v0.130.1 1997/11/23 07:45 EST sunshine@sunshineco.com
    Applied v0.130 NEXTSTEP 3.3 diffs.
    Fixed bug: [MiscIntList addInt:] replacement in 'tops' script was broken.
    README changes:
	Fixed package name to conform even more closely to ftp site rules.
	Windows 95 & NT examples now use C:\ instead of D:\.
	Added (Windows 95 & NT only) comment to MiscTableScroll.dll note.

    Changed Files:
    * MiscTableBorder.{h|cc}
    + MiscTableBorder_io.cc
    + MiscTableBorder_sel.cc
    * MiscTableScroll-3.3-4.x.tops
    * MiscTableScroll.{h|M}
    + MiscTableScrollSel.M
    * MiscTableUtil.h
    * MiscTableView.{h|M}
    + MiscTableViewCursor.M
    + MiscTableViewDrag.M
    + MiscTableViewPrivate.h
    * README.rtf

v0.129.1 1997/07/11 20:00 EDT sunshine@sunshineco.com
    Applied v0.129 NEXTSTEP 3.3 diffs.
    README changes:
	- Updated package name to conform to ftp site rules.
	- Updated package name from .tar to .gnutar.
	- Fixed more wording.
	- Added description of setting PATH variable under Windows for dll.

    Changed Files:
    * README.rtf

v0.128.1 1997/07/07 09:00 EDT sunshine@sunshineco.com
    Applied v0.128 NEXTSTEP 3.3 diffs.
    Fixed minor errors in MiscTableScroll.rtf.
    Ported mcgh2misc conversion scripts to OPENSTEP.
    Added a README describing compilation and installation.

    Changed Files:
    * MiscExporter.rtf
    * MiscTableCell.rtf
    * MiscTableScroll.rtf
    * mcgh2misc.{el|sh}
    + README.rtf

v0.127.1 1997/06/22 10:00 EDT sunshine@sunshineco.com
    Applied v0.127 NEXTSTEP 3.3 diffs.

    Changed Files:
    * MiscTableCell.{h|M}
    * MiscTableScrollEdit.M
    * MiscTableScrollISearch.M
    * MiscTableView.M

v0.126.1 1997/06/22 08:00 EDT sunshine@sunshineco.com
    Applied v0.126 NEXTSTEP 3.3 diffs.
    Fixed install location to be $(NEXT_ROOT)/LocalLibrary for NT.  I had
	inadvertently set it to LocalDeveloper in v0.125.9 (even though the
	HISTORY entry says otherwise).

    Changed Files:
    * Makefile
    * MiscTableCell.rtf
    * MiscTableView.M
    * PB.project

v0.125.9 1997/06/18 11:20 EDT sunshine@sunshineco.com
    Ported MiscTableScroll.rtf to OPENSTEP.
    Synchronized MiscTableScroll.rtf with v127 for NEXTSTEP 3.3.
    Minor corrections to MiscTableCell.rtf and MiscExporter.rtf.
    Renamed tops script so as to be valid for 4.x rather than just 4.1.
    Tops script now fixes #imports to handle framework structure:
	<MiscExporter.h>	--> <MiscTableScroll/MiscExporter.h>
	<MiscTableCell.h>	--> <MiscTableScroll/MiscTableCell.h>
	<MiscTableScroll.h>	--> <MiscTableScroll/MiscTableScroll.h>
	<MiscTableTypes.h>	--> <MiscTableScroll/MiscTableTypes.h>
    For better OPENSTEP naming conformance, renamed:
	numSelectedSlots:	--> numberOfSelectedSlots:
	numSelectedRows		--> numberOfSelectedRows
	numSelectedColumns	--> numberOfSelectedColumns;
	numVisibleSlots:	--> numberOfVisibleSlots:
	numVisibleRows		--> numberOfVisibleRows
	numVisibleColumns	--> numberOfVisibleColumns
	buffCount		--> bufferCount
	tableScrollBuffCount:	--> tableScrollBufferCount:
	borderTitlesSize:	--> slotTitlesSize:
	border:setTitlesSize:	--> border:setSlotTitlesSize:
	borderClickedSlot:	--> clickedSlot:
	cellIsSelected::	--> cellIsSelectedAtRow:column:
	scrollSelToVisible	--> scrollSelectionToVisible
	MISC_TABLE_CELL_ICON	--> MISC_TABLE_CELL_IMAGE
    Added missing conversion to tops script:
	clickedCol		--> clickedColumn
    Added missing -slotTitlesSize:, -rowTitlesWidth, and -columnTitlesHeight
	to documentation.
    Sorted method lists in tops script.  Reorganized somewhat.
    Added missing MiscIntList conversions to tops script:
	addInt:			--> addObject:
	addIntList:		--> addObjectsFromArray:
	bsearch:		--> indexOfObject:
	bsearch:using:data:	--> indexOfObject:
	initFromString:		--> componentsSeparatedByString:
	insertInt:at:		--> insertObject:atIndex:
	intAt:			--> objectAtIndex & intValue
	lsearch:		--> indexOfObject:
	lsearch:using:data:	--> indexOfObject:
	readFromString:		--> componentsSeparatedByString:
	removeIntAt:		--> removeObjectAtIndex:
	replaceIntAt:with:	--> replaceObjectAtIndex:withObject:
	sortUsing:data:		--> sortUsingFunction:context:
	writeToString		--> description
	writeToString:size:	--> description
	writeToString:size:canExpand: --> description
    Pseudo conditionalized setting of OTHER_OFILES in Makefile.preamble.  It
	is needed in OPENSTEP 4.1 and OPENSTEP 4.2 (prerelease) since NeXT's
	makefiles neglect to add the object files for cc, cpp, and cxx
	sources to OFILES.  However, NeXT finally fixed this bug in OPENSTEP
	4.2, which means that we can not add the object files ourself (lest
	the linker complains about linking the same files twice).
    As of v104.1 use of "highlight" color is based upon -isSelected rather
	than -isHighlighted.  Consequently the term "highlight" is
	misleading.  Therefore renamed all methods and variables to use the
	term "selected" rather than "highlight".  Updated source and
	documentation accordingly.
    Added "highlight" to "selected" conversions to tops script:
	defaultHighlightBackgroundColor	--> defaultSelectedBackgroundColor
	defaultHighlightTextColor	--> defaultSelectedTextColor
	highlightBackgroundColor	--> selectedBackgroundColor
	highlightTextColor		--> selectedTextColor
	setHighlightBackgroundColor:	--> setSelectedBackgroundColor:
	setHighlightTextColor:		--> setSelectedTextColor:
	setOwnerHighlightBackgroundColor: --> setOwnerSelectedBackgroundColor:
	setOwnerHighlightTextColor:	--> setOwnerSelectedTextColor:
	setUseOwnerHighlightBackgroundColor:
					--> setUseOwnerSelectedBackgroundColor:
	setUseOwnerHighlightTextColor:	--> setUseOwnerSelectedTextColor:
	tableScroll:highlightBackgroundColorChangedTo:
			--> tableScroll:selectedBackgroundColorChangedTo:
	tableScroll:highlightTextColorChangedTo:
			--> tableScroll:selectedTextColorChanagedTo:
	tc1HighlightBackgroundColorLen	--> tc1SelectedBackgroundColorLen
	tc1HighlightBackgroundColorPos	--> tc1SelectedBackgroundColorPos
	tc1HighlightBackgroundColorPtr	--> tc1SelectedBackgroundColorPtr
	tc1HighlightTextColorLen	--> tc1SelectedTextColorLen
	tc1HighlightTextColorPos	--> tc1SelectedTextColorPos
	tc1HighlightTextColorPtr	--> tc1SelectedTextColorPtr
	useOwnerHighlightBackgroundColor--> useOwnerSelectedBackgroundColor
	useOwnerHighlightTextColor	--> useOwnerSelectedTextColor
	highlightBackgroundColor	--> selectedBackgroundColor [variable]
	highlightTextColor		--> selectedTextColor [variable]
    Fixed bug: Delegate messages -tableScroll:selectedTextColorChangedTo:
	and -tableScroll:selectedBackgroundColorChangedTo: were reversed
	in MiscDelegateFlags (one was sent when the other should have been,
	and vice-versa).
    Ported to OPENSTEP 4.2 (final release) for Mach and NT.
    Added local new.h which declares default placement new() operator since
	<new.h> is missing entirely on Mach, and the one redistributed from
	Microsoft on NT is buggy.  Fortunately a local new.h does not
	compromise support for OPENSTEP 4.1.
    Renamed IBConnector.h to NSIBConnector.h.
    Worked around Objective-C++ compiler crasher in OPENSTEP 4.2 (final
	release) for NT.  This bug also afflicts 4.2 (prerelease) for Mach
	and NT.  Whenever a message is sent to 'super' from within a
	category, the compiler crashes with an "internal compiler error".
	Work around was to add stub methods in the main (non-category)
	implementation which merely forward the message to 'super' on behalf
	of the categories.  Though ugly, it works, is very localized, and
	easily removed when the bug is finally fixed.  Bug afflicted
	MiscTableConnInspector.M, MiscTableViewPrint.M, MiscTableScrollPB.M,
	MiscTableScrollKB.
    Worked around 'pswrap' bug where it generates unused 'pad' variables.
	Overrode implicit 'psw' rule via Makefile.postamble so that it runs a
	'sed' script which removes the unused and useless variable altogether.
    Changed 'install' location on NT to $(NEXT_ROOT)/LocalLibrary.

    Changed Files:
    * {Framework|Palette}/Makefile
    * {Framework|Palette}/Makefile.{preamble|postamble}
    * {Framework|Palette}/PB.project
    * MiscDelegateFlags.{h|cc}
    * MiscDrawList.cc
    * MiscExporter.rtf
    * MiscTableBorder.cc
    * MiscTableCell.{h|M|rtf}
    * MiscTableConnector.{h|M}
    * MiscTableConnInspector.M
    * MiscTableScroll.{h|M|rtf}
    * MiscTableScroll-3.3-4.x.tops
    * MiscTableScrollData.M
    * MiscTableScrollInspector.{h|M|nib}
    * MiscTableScrollKB.M
    * MiscTableScrollPB.M
    * MiscTableScrollSort.M
    * MiscTableTypes.h
    * MiscTableView.{h|M}
    * MiscTableViewPrint.M
    + new.h
    * NSIBConnector.h (was IBConnector.h)

v0.125.8 1997/04/15 08:00 EDT sunshine@sunshineco.com
    Considerable restructuring in order to better support Windows NT.
    Broke into Framework and Palette which are contained within a new
	top-level aggregate project.
    Consequently removed the MiscBorderViewInline.M hack which had HEX dumps
	of the tiffs hard-coded right into it.	These are now available
	as resources within the Framework.
    Now publishes headers, documentation, tops, and image files in Framework.
    Prefixed "MiscTableScroll/" to all "#import<>" statements since headers
	now come out of Framework.
    Added CustomInfo.plist and mucked around in Makefiles for Palette in
	order to work around shortcoming in either the dll loader or the
	Objective-C run-time under Windows NT.	+[NSBundle load] was failing
	when both the Framework's dll and the Palette's dll had the same name
	(MiscTableScroll.dll) even though they came out of *different*
	directories.  D'oh!  Worked around this by renaming the executable to
	MiscTableScrollPalette.dll while leaving the Palette wrapper named
	MiscTableScroll.palette.
    The binary-file pack & unpack scripts no longer error out if tiffs or
	nibs are non-existent.
    Rewrote pack.sh script for project archiving so it knows about
	subprojects and lproj directories.
    Added an unpack.sh whichs knows about subprojects and lproj directories
	and performs the RCS check-out and .uu file unpacking.

    Changed Files:
    + Notes/		(contains all .txt files)
    + Framework/	(contains all framework related files)
    + Palette/		(contains all palette related files)
    + Scripts/		(contains all .sh & .el files)
    + Makefile		(new top-level aggregate makefile)
    + PB.project	(new top-level aggregate project)
    * pack.sh
    + unpack.sh
    * pack_binaries.sh
    * unpack_binaries.sh
    + Palette/CustomInfo.plist
    * MiscTableConnInspector.M
    * MiscTableScrollInspector.{h|M}
    * Palette/Makefile
    * Palette/Makefile.{preamble|postamble}
    * Palette/PB.project
    * MiscBorderView.{h|M}
    * MiscExporter.h
    * MiscExporterPrivate.h
    * MiscMouseTracker.h
    * MiscTableCell.{h|M}
    * MiscTableConnector.M
    * MiscTableScroll.{h|M}
    * MiscTableScrollData.M
    * MiscTableScrollISearch.M
    * MiscTableScrollKB.M
    * MiscTableScrollPB.M
    * MiscTableScrollPrivate.h
    * MiscTableScrollSort.M
    * MiscTableView.{h|M}
    * Framework/Makefile
    * Framework/Makefile.{preamble|postamble}
    * Framework/PB.project

v0.125.7 1997/04/09 03:00 EDT sunshine@sunshineco.com
    Ported back to OPENSTEP 4.1 (gamma) for Mach.
    The Objective-C++ compiler (under 4.1) does not pre-define the macro
	__PRETTY_FUNCTION__ which is used by NSCAssert() and relatives.
	I had to fake it up by placing a conditional compilation directive
	in MiscTableScrollPrivate.h.
    Fixed Makefile.postamble so that it can create libMiscTableScroll.a under
	NT also.

    Changed Files:
    * Makefile.postamble
    * MiscTableScrollPrivate.h

v0.125.6 1997/04/04 05:00 EST sunshine@sunshineco.com
    Ported (as much as possible) to OPENSTEP 4.2 prerelease for Mach.
    Added -Werror back to Compiler Flags for the NT platform since this
	is how it should be in the 'final' package and since this is also
	a problem on 4.2 prerelease for Mach.  Since I don't plan on actually
	supporting the prerelase (and indeed serious compiler bugs prevent
	me from doing so), I'm not going to save prerelease-patches in the
	production package.
    Fixed crasher during archiving/unarchiving (this happened, for instance,
	when dragging/dropping MiscTableScroll in IB).	The problem showed up
	with the gcc 2.7.2.1 compiler when 'bool' became a built-in type.
	It turns out that @encode(bool) returns an empty string which causes
	the NSCoders to barf.  This was fixed by assigning the (bool) to a
	(char) during coding.  This also keeps it compatible with the pre-4.2
	(bool) type which we faked up via a typedef to (char).
    Was using NSArchiver* in a number of places where NSCoder* was more
	appropriate and consistent with the rest of OPENSTEP.
    Replaced all assert() calls with NSAssert() variations which are more
	portable and which throw exceptions (which can be caught and logged).

    Changed Files:
    + MACH-NT-4.2.txt
    * MiscBorderView.M
    * MiscLineWrapper.cc
    * MiscSparseSet.cc
    * MiscTableBorder.{h|cc}
    * MiscTableScroll.M
    * MiscTableScrollData.M
    * MiscTableScrollSort.M
    * MiscTableView.M
    * MiscTableViewPrint.M
    - NT-PORT.txt

v0.125.5 1997/04/01 08:00 EST sunshine@sunshineco.com
    Ported (as much as possible) to OPENSTEP 4.2 prerelease for NT.  The
	palette now compiles and loads in IB, though I had to hack around
	some pretty serious compiler bugs (and actually ended up commenting
	out some code necessary for making connections in IB -- though I
	didn't actually save the hacks in the final package).
	Dragging an MiscTableScroll to a window in IB produces an error at
	this point.  [Fixed in v0.125.6, was a NeXT bug with @encode(bool).]
    Moved -Werror and -Wwrite-strings from Makefile.preamble into PB.project
	since compiler on NT spits out warnings that I can't sensibly avoid.
	Ergo -Werror was removed for NT, though it is still used for Mach.
    Adjusted MAKE variable for NT in PB.project ('make' rather than
	'gnumake').
    MiscExporter no longer sends -makeKeyAndOrderFront: & -close messages to
	the NSSavePanel since, in OPENSTEP for NT, it does not respond to
	these messages.
    MiscExporterDBF was unnecessarily shadowing the variable 'c' in
	-dbfAnalyze:::.
    MiscExporterDBF's set_time_field() had an unused argument.
    Fixed bugs in MiscTableScroll.M:
	- Some methods were failing to return a value.
	- Some (void) methods were returning a value.
	- Comparisons between signed and unsigned integers.
	- Now cancels delegate notifications in -dealloc.
    Fixed bug in MiscTableScrollData.M:
	- Some (void) methods were returning a value.
    Fixed bug in MiscTableScrollEdit.M:
	- abortEditing was failing to return a value.
    Fixed bugs in MiscTableBorder.cc:
	- Was incorrectly retaining 'owner' and never releasing it, hence
	  leaking the MiscTableScroll.
	- Comparisons between signed and unsigned integers.
    Fixed bug in MiscTableView:
	- As a consequence of auto-release mechanism, MiscTableView was being
	  freed *after* MiscTableScroll, however MiscTableView was still
	  referring to the freed MiscTableScroll via its 'scroll' variable,
	  and trying to send messages to it.  (This problem showed up when
	  I fixed the bug where MiscTableBorder was retaining but never
	  releasing its 'owner', as mentioned above.)
    Worked around "dllimport'ed value used as initializer" error in delegate
	notification code in MiscTableScroll.M under Windows NT.  It was
	using notification messages exported from the AppKit.dll in a static
	table.
    Fixed bug: MiscTableTypes.h was incorrectly declaring
	MiscDefaultCompareSlotFunc as a pointer to a function rather than an
	actual external function.
    Fixed bool.h so that it no longer defines 'bool' for (>= 2.7) compiler
	since 'bool' is now a built-in type.
    MiscDelegateFlags.h now includes <Foundation/NSObject.h> rather than
	<objc/objc.h> since the OPENSTEP 4.2 prerelease compiler for NT
	couldn't grok the keyword 'class' following inclusion of
	<objc/objc.h>.	(I haven't looked closely at objc.h yet to find out
	why this happened.  Anyhow, NSObject.h is more portable than objc.h.)
    Fixed bugs in MiscDelegateFlags.cc:
	- objcToSel() was using '=' in conditional rather than '=='.
	- A meaningless and redundant 'const' was removed from a reference.
    Eliminated gcc 2.7.2.1 warning about possible uninitialized variable in
	MiscDrawList::draw_text().
    Fixed comparisions between signed and unsigned integers in MiscSparseSet.
    Added, possibly temporary, -ObjC++ flag to CCFILES in Makefile.postamble.
	This is required for gcc 2.7.2.1 in order to get it to recognize
	Objective-C code (which we do have in .cc files).  I've reported this
	problem to NeXT but have not received a reply yet.  The problem is
	that their makefiles now presume that *only* .M files contain
	Objective-C++, and that .cc files contain only C++.

    Changed Files:
    * bool.h
    * Makefile
    * Makefile.preamble
    * MiscDelegateFlags.{h|cc}
    * MiscDrawList.cc
    * MiscExporter.M
    * MiscExporterDBF.M
    * MiscSparseSet.cc
    * MiscTableBorder.cc
    * MiscTableConnInspector.M
    * MiscTableScroll.M
    * MiscTableScrollData.M
    * MiscTableScrollEdit.M
    * MiscTableTypes.h
    * MiscTableView.{h|M}
    * MiscTableViewPrint.M
    * PB.project

v0.125.4 1997/03/23 05:45 EST sunshine@sunshineco.com
    Ported MiscTableCell.rtf to OPENSTEP.
    Ported MiscExporter.rtf to OPENSTEP.
    Worked around OPENSTEP 4.1 bug where -setupFieldEditorAttributes: never
	gets called -- so MiscBorderCell was not drawing with white text.
	I worked around the problem by subclassing from NSTextFieldCell rather
	than NSCell.  This way I was able to use -setTextColor: to get the
	correct color.
    MiscConnector now uses object_setInstanceVariable() exclusively.  It no
	longer tries to constructs a setter method name out of the outlet
	name (i.e. outlet='foo', construct='-setFoo:').

v0.125.3 1997/03/21 18:30 EST sunshine@sunshineco.com
    Fixed bug: -[MiscTableView awaitDragEvent:atRow:column:] was using
	NSLeftMouseDraggedMask in three places it should have used
	NSLeftMouseDragged.
    pack.sh script now creates a package with a filename containing the string
	"OPENSTEP" so that it is distinguished from the NEXTSTEP version.

v0.125.2 1997/03/21 02:00 EST sunshine@sunshineco.com
    Fixed bugs in -[MiscTableScroll textDidEndEditing:]:
	- Logic to check if string had been edited was reversed.
	- String which was extracted from field-editor was only retain'd
	  rather than copy'd.  When -[NSCell endEditing:] was called, it
	  emptied the contents of this string before its value could be used.

v0.125.1 1997/03/20 19:40 EST sunshine@sunshineco.com
    Applied v0.125 NEXTSTEP 3.3 diffs.

v0.124.1 1997/03/20 19:30 EST sunshine@sunshineco.com
    Applied v0.124 NEXTSTEP 3.3 diffs.

v0.123.1 1997/03/20 19:20 EST sunshine@sunshineco.com
    Applied v0.123 NEXTSTEP 3.3 diffs.
    Removed -reflectSelection --> -selectionChanged conversion from 'tops'
	script since -reflectSelection has been removed from NEXTSTEP 3.3
	TableScroll as well.
    Added new [de]selection methods to 'tops' script:
	selectCol:byExtension:		--> selectColumn:byExtension:
	border:selectTags:byExtension:	--> border:selectSlotTags:byExtension:
	selectRowTags:byExtension:	--> selectRowTags:byExtension:
	selectColTags:byExtension:	--> selectColumnTags:byExtension:
	border:selectSlots:byExtension:	--> border:selectSlots:byExtension:
	selectRows:byExtension:		--> selectRows:byExtension:
	selectCols:byExtension:		--> selectColumns:byExtension:
	deselectCol:			--> deselectColumn:
	border:deselectTags:		--> border:deselectSlotTags:
	deselectRowTags:		--> deselectRowTags:
	deselectColTags:		--> deselectColumnTags:
	border:deselectSlots:		--> border:deselectSlots:
	deselectRows:			--> deselectRows:
	deselectCols:			--> deselectColumns:

v0.122.1 1997/03/20 17:50 EST sunshine@sunshineco.com
    Applied v0.122 NEXTSTEP 3.3 diffs.

v0.121.1 1997/03/20 17:10 EST sunshine@sunshineco.com
    Applied v0.121 NEXTSTEP 3.3 diffs.

v0.120.1 1997/03/20 17:00 EST sunshine@sunshineco.com
    Applied v0.120 NEXTSTEP 3.3 diffs.

v0.119.1 1997/03/20 16:40 EST sunshine@sunshineco.com
    Applied v0.119 NEXTSTEP 3.3 diffs.

v0.118.1 1997/03/20 15:35 EST sunshine@sunshineco.com
    Applied v0.118 NEXTSTEP 3.3 diffs.

v0.117.1 1997/03/20 15:25 EST sunshine@sunshineco.com
    Applied v0.117 NEXTSTEP 3.3 diffs.

v0.116.1 1997/03/20 15:15 EST sunshine@sunshineco.com
    Applied v0.116 NEXTSTEP 3.3 diffs.

v0.115.1 1997/03/20 14:50 EST sunshine@sunshineco.com
    Applied v0.115 NEXTSTEP 3.3 diffs.

v0.114.1 1997/03/11 05:30 EST sunshine@sunshineco.com
    Applied v0.114 NEXTSTEP 3.3 diffs.
    Fixed v0.113.1 compilation problems in MiscExporterASCII.M.

v0.113.1 1997/03/10 01:30 EST sunshine@sunshineco.com
    Applied v0.113 NEXTSTEP 3.3 diffs.
    Removed errant semi-colon from -[MiscTableScroll selectCols:].
    Added explicit (id) return type to -[MiscBorderView -initWithFrame...].
    Added new cell-editing related methods to 'tops' script.
    For greater OPENSTEP consistency, renamed:
	reenableCursor		--> enableCursor
	getDocClipFrame		--> documentClipRect
	colOrder		--> columnOrder
	setColOrder:		--> setColumnOrder:
	colOrderAsString	--> columnOrderAsString
	setColOrderFromString:	--> setColumnOrderFromString:
	colSizes		--> columnSizes
	setColSizes:		--> setColumnSizes:
	colSizesAsString	--> columnSizesAsString
	setColSizesFromString:	--> setColumnSizesFromString:
	hasColSelection		--> hasColumnSelection
	hasMultipleColSelection	--> hasMultipleColumnSelection
	numSelectedCols		--> numSelectedColumns
	colIsSelected:		--> columnIsSelected:
	selectedColTags		--> selectedColumnTags
	selectedCols		--> selectedColumns
	selectCol:		--> selectColumn:
	selectColTags:		--> selectColumnTags:
	selectCols:		--> selectColumns:
	selectAllCols		--> selectAllColumns
	clearColSelection	--> clearColumnSelection
	cursorCol		--> cursorColumn
	setCursorCol:		--> setCursorColumn:
	clearCursorCol		--> clearCursorColumn
	hasValidCursorCol	--> hasValidCursorColumn
	colBorder		--> columnBorder
	colTitlesOn		--> columnTitlesOn
	setColTitlesOn:		--> setColumnTitlesOn:
	colTitleMode		--> columnTitleMode
	setColTitleMode:	--> setColumnTitleMode:
	colTitlesHeight		--> columnTitlesHeight
	setColTitlesHeight:	--> setColumnTitlesHeight:
	moveColFrom:to:		--> moveColumnFrom:to:
	colPosition:		--> columnPosition:
	colAtPosition:		--> columnAtPosition:
	uniformSizeCols		--> uniformSizeColumns
	sizeableCols		--> sizeableColumns
	draggableCols		--> draggableColumns
	modifierDragCols	--> modifierDragColumns
	colAdjustedSize:	--> columnAdjustedSize:
	colSize:		--> columnSize:
	colMinSize:		--> columnMinSize:
	colMaxSize:		--> columnMaxSize:
	colDataSize:		--> columnDataSize:
	colIsSizeable:		--> columnIsSizeable:
	colExpandsToData:	--> columnExpandsToData:
	colIsAutosize:		--> columnIsAutosize:
	colTitle:		--> columnTitle:
	colTag:			--> columnTag:
	colCellType:		--> columnCellType:
	colCellPrototype:	--> columnCellPrototype:
	setSizeableCols:	--> setSizeableColumns:
	setDraggableCols:	--> setDraggableColumns:
	setModifierDragCols:	--> setModifierDragColumns:
	setUniformSizeCols:	--> setUniformSizeColumns:
	setCol:size:		--> setColumn:size:
	setCol:minSize:		--> setColumn:minSize:
	setCol:maxSize:		--> setColumn:maxSize:
	setCol:dataSize:	--> setColumn:dataSize:
	setCol:sizeable:	--> setColumn:sizeable:
	setCol:expandsToData:	--> setColumn:expandsToData:
	setCol:autosize:	--> setColumn:autosize:
	setCol:title:		--> setColumn:title:
	setCol:tag:		--> setColumn:tag:
	setCol:cellType:	--> setColumn:cellType:
	setCol:cellPrototype:	--> setColumn:cellPrototype:
	numVisibleCols		--> numVisibleColumns
	firstVisibleCol		--> firstVisibleColumn
	lastVisibleCol		--> lastVisibleColumn
	colIsVisible:		--> columnIsVisible:
	setFirstVisibleCol:	--> setFirstVisibleColumn:
	setLastVisibleCol:	--> setLastVisibleColumn:
	drawCol:		--> drawColumn:
	scrollColToVisible:	--> scrollColumnToVisible:
	drawColTitle:		--> drawColumnTitle:
	autoSortCols		--> autoSortColumns
	setAutoSortCols:	--> setAutoSortColumns:
	colSortVector		--> columnSortVector
	setColSortVector:	--> setColumnSortVector:
	sortCols		--> sortColumns
	colsAreSorted		--> columnsAreSorted
	sortCol:		--> sortColumn:
	colIsSorted:		--> columnIsSorted:
	compareCols::info:	--> compareColumns::info:
	compareCols::		--> compareColumns::
	colSortFunc:		--> columnSortFunction:
	colSortDirection:	--> columnSortDirection:
	colSortType:		--> columnSortType:
	setCol:sortFunc:	--> setColumn:sortFunction:
	setCol:sortDirection:	--> setColumn:sortDirection:
	setCol:sortType:	--> setColumn:sortType:
	doIncrementalSearch:col:--> doIncrementalSearch:column:
	getISearchCol:		--> getISearchColumn:
	doGetISearchCol:	--> doGetISearchColumn:
	compareSlotFunc		--> compareSlotFunction
	setCompareSlotFunc:	--> setCompareSlotFunction:
	border:slotSortFunc:	--> border:slotSortFunction:
	border:setSlot:sortFunc:--> border:setSlot:sortFunction:
	rowSortFunc:		--> rowSortFunction:
	setRow:sortFunc:	--> setRow:sortFunction:
	setColExportTitleMode:	--> setColumnExportTitleMode:
	setColExportGridMode:	--> setColumnExportGridMode:
	getColExportTitleMode	--> getColumnExportTitleMode
	getColExportGridMode	--> getColumnExportGridMode
	tableScroll:getISearchCol: --> tableScroll:getISearchColumn:

v0.112.1 1997/02/09 12:00 EST sunshine@sunshineco.com
    Applied v0.112 NEXTSTEP 3.3 diffs.
    Fixed bug: -[MiscBorderView dragEvent:inPos:] was only redrawing itself
	rather than both itself *and* the MiscTableView after a slot had been
	dragged to a new position.

v0.111.1 1997/02/09 08:40 EST sunshine@sunshineco.com
    Applied v0.111 NEXTSTEP 3.3 diffs.

v0.110.1 1997/02/09 06:00 EST sunshine@sunshineco.com
    Applied v0.110 NEXTSTEP 3.3 diffs.
    Removed errant semi-colon and added explicit (id) return type to
	-[MiscTableCell copyWithZone:].
    Fixed bug: MiscDrawList was unconditionally using screen-font -- even for
	printing.

v0.109.1 1997/02/07 10:00 EST sunshine@sunshineco.com
    Applied v0.109 NEXTSTEP 3.3 diffs.

v0.108.1 1996/12/31 07:00 EST sunshine@sunshineco.com
    Applied v0.108 NEXTSTEP 3.3 diffs.
    Renamed more methods to be consistent with OPENSTEP specification:
	border:findSlotWithTag:	--> border:slotWithTag:
	findColWithTag:		--> columnWithTag:
	findRowWithTag:		--> rowWithTag:
	findCellWithTag:row:col:--> getRow:column:ofCellWithTag:
	findCell:row:col:	--> getRow:column:ofCell:
    Updated tops script accordingly.

v0.107.1 1996/12/30 09:00 EST sunshine@sunshineco.com
    Applied v0.107 NEXTSTEP 3.3 diffs.

v0.106.1 1996/12/30 07:00 EST sunshine@sunshineco.com
    Applied v0.106 NEXTSTEP 3.3 diffs.

v0.105.1 1996/12/30 06:30 EST sunshine@sunshineco.com
    Applied v0.105 NEXTSTEP 3.3 diffs.

v0.104.1 1996/12/30 03:00 EST sunshine@sunshineco.com
    Applied v0.104 NEXTSTEP 3.3 diffs.

v0.103.4 1996/12/25 23:30 EST sunshine@sunshineco.com
    Ported to OPENSTEP 4.1 (gamma).

v0.103.3 1996/05/13 08:00 EDT sunshine@sunshineco.com
    For consistency with other methods, renamed:
	border:insertSlotAt: --> border:insertSlot:
	border:removeSlotAt: --> border:removeSlot:
    Removed rogue code from TableScrollISearch which should have been deleted
	when v0.102 NEXTSTEP 3.3 diffs were applied.
    TableScroll.M's -font now returns (NSFont*) rather than (id) to be in
	agreement with header.
    Did considerable work on "tops" script.  It is now tested and working.
	Made the following changes:
	- Internal names are now much more consistent throughout.
	- Added all of the -set...Gray: variations.
	- Added conversion for -reflectSelection --> -selectionChanged.
	- Fixed numerous syntax errors in script itself.
	- Fixed bug: was adding extra semi-colon after vector access methods
	    which returned a length.
	- Fixed bug: -border:physicalToVisual and -border:visualToPhysical
	    replacement was not working.
	- Added missing conversions for -colOrderAsString, -colSizesAsString,
	    -rowOrderAsString:, and -rowSizesAsString.
	- Fixed bug: -...AsString methods produced "var1 = var2 = [...];" if
	    result was already being assigned to var1.
	- Fixed bug: wasn't converting andReturnType: --> returnType:.
	- Added conversions for -border:insertSlot:, border:removeSlot:.
	- Added missing -cellWithTag: and -cellWithTag:row:col: conversions.
	- Now converts return type of delegate methods to (void), (id), and
	    (NSString*) as appropriate.	 Also converts delegate arguments
	    from (NXAtom) to (NSString*) as needed.

v0.103.2 1996/05/07 10:00 EDT sunshine@sunshineco.com
    Fixed bug: TableCell was retaining colors one time too many when
	unarchiving them.
    Fixed bug: TableScroll was retaining objects when unarchiving which it
	never releases: delegate, dataDelegate, target, doubleTarget.
    For classes which archive themselves, bumped version numbers way up (to
	1000) so that NEXTSTEP 3.3 TableScroll has room to grow.
    Added a few missing explicit (id) for return types and argument types.
    Added a missing explicit (NSPasteboard*) argument type.
    Converted slotSortVector from an int array to an NSArray.
    Under OpenStep, -selectionChanged and -reflectSelection had identical
	functionality, so dropped -reflectSelection altogether.
    Renamed the following methods for consistency with other method names:
	border:selectTags:	--> border:selectSlotTags:
	border:setCursor:	--> border:setCursorSlot:
	border:setTitlesOn:	--> border:setSlotTitlesOn:
	border:setTitleMode:	--> border:setSlotTitleMode:
    Cleaned up tops script considerably.  Added rules for new -slotSortVector
	type.  Added extra warnings for trouble spots.

v0.103.1 1996/05/07 02:30 EDT sunshine@sunshineco.com
    Applied v0.103 NEXTSTEP 3.3 diffs.

v0.102.1 1996/05/06 04:30 EDT sunshine@sunshineco.com
    Applied v0.102 NEXTSTEP 3.3 diffs.

v0.101.1 1996/04/30 05:30 EDT sunshine@sunshineco.com
    Ported v0.101 from NEXTSTEP 3.3 to OPENSTEP 4.0 (prerelease 2).
