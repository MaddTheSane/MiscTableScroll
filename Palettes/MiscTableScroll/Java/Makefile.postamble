#==============================================================================
#
#	Copyright (C) 1999 by Paul S. McCarthy and Eric Sunshine.
#		Written by Paul S. McCarthy and Eric Sunshine.
#			    All Rights Reserved.
#
#	This notice may not be removed from this source code.
#
#	This object is included in the MiscKit by permission from the authors
#	and its use is governed by the MiscKit license, found in the file
#	"License.rtf" in the MiscKit distribution.  Please refer to that file
#	for a list of all applicable permissions and restrictions.
#
#==============================================================================
#------------------------------------------------------------------------------
# Makefile.postamble
# $Id: Makefile.postamble,v 1.1 99/06/14 18:55:24 sunshine Exp $
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# The Java wrapper makefile has a bug where it unnecessarily copies the Java
# .class file hierarchy into the main source directory during installation.
# The "clean" target also fails to remove this rogue directory.  Work around
# the problem by faking it into invoking a do-nothing target instead.  See
# Makefile.preamble for the other half of this work-around.
#------------------------------------------------------------------------------

.PHONY: table-scroll-do-not-copy-java-classes
table-scroll-do-not-copy-java-classes:


#------------------------------------------------------------------------------
# Under Windows, relocate the DLL to the standard Executables directory which
# contains DLL files from other frameworks, since this directory is likely to
# be named in the user's PATH.  See Makefile.preamble also.
#------------------------------------------------------------------------------

table-scroll-relocate-dll: $(DSTROOT)$(LIBRARY_DLL_INSTALLDIR)
	$(RM) -f $(DSTROOT)$(LIBRARY_DLL_INSTALLDIR)/$(notdir $(PRODUCT))
	$(CP) $(DSTROOT)$(INSTALLDIR)/$(notdir $(PRODUCT)) \
		$(DSTROOT)$(LIBRARY_DLL_INSTALLDIR)
	$(RM) -f $(DSTROOT)$(INSTALLDIR)/$(notdir $(PRODUCT))

$(DSTROOT)$(LIBRARY_DLL_INSTALLDIR):
	$(MKDIRS) $@


#------------------------------------------------------------------------------
# Under Windows, the stub file generated by bridget for MiscTableScroll has so
# many exported symbols that the compiler generates a single line of assembly
# which is so long that it overflows the assembler's input buffer, resulting in
# a crash.  The offending assembler directive looks like this:
#    .ascii " -export:symbol1 -export:symbol2 ... -export:symbolN\0"
# To work around this problem I devised a "sed" script which breaks the line
# apart in this fashion:
#    .ascii " -export:symbol1"
#    .ascii " -export:symbol2"
#    ...
#    .ascii " -export:symbolN\n"
# This patch shuts off the normal .m file to .o file compilation step and
# replaces it with a three part process in which the .m file is translated to
# assembly, the assembly is fed through sed, and finally sed's output is handed
# off to the assembler for translatiion into an .o file.
#------------------------------------------------------------------------------
ifeq "WINDOWS" "$(OS)"

.SUFFIXES: .sfix

# Disable normal .m -> .o rule.
%.o : %.m

.m.sfix:
	$(CC) $(ALL_CFLAGS) -S -o $(SFILE_DIR)/$*.sfix $<

.sfix.s:
	$(SED) -f MiscTableScrollJava.sed $< > $(SFILE_DIR)/$*.s

endif


#******************************************************************************
#
#       Copyright (C)1998,1999 by Eric Sunshine <sunshine@sunshineco.com>
#
# The contents of this file are copyrighted by Eric Sunshine.  You may use
# this file in your own projects provided that this copyright notice is
# retained verbatim.
#
#******************************************************************************
#------------------------------------------------------------------------------
# forceload.fix                                       (1999-06-09, version 1.1)
#
#       A Makefile.postamble patch which eliminates the NSFramework_forceLoad()
#       compiler warning generated by YellowBox DR2 on Microsoft Windows.
#
#       Under YellowBox DR2 for Microsoft Windows, Apple tried patching the
#       system makefile so that it automatically generates source code which
#       references all the classes in each framework used by a project.  The
#       intention was to make all of the frameworks' symbols available to
#       loadable bundles even if the main application does not reference the
#       symbols itself.  This is similar to the behavior of the linker's
#       -all_load switch under Mach.
#
#       However, there are two problems with the DR2 implementation:
#
#       a) It is incomplete and does not generate any framework references at
#          all; instead it generates a single empty function named
#          NSFramework_forceload().
#       b) The generated function is declared "static" which results in a
#          compiler warning about an unused function.
#
#       This file (forceload.fix) works around the compiler warning by
#       disabling generation of NSFramework_forceload() altogether.  Since the
#       function is empty and is never referenced by any other code, this is a
#       safe operation.
#
#       To use this patch, follow these instructions:
#
#       a) Open the project's top-level Makefile.postamble in a text editor.
#       b) Append the contents of this file (forceload.fix) to the end of
#          Makefile.postamble.
#       c) Clean the project (make clean) and then rebuild it.
#
# Please send comments to Eric Sunshine <sunshine@sunshineco.com>
# MIME, NeXT, and ASCII mail accepted.
#------------------------------------------------------------------------------

ifeq "WINDOWS" "$(OS)"
GENFORCELOAD=echo //
endif
